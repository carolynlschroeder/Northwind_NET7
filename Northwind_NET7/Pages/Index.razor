@page "/"
@using Northwind_Net7_Shared
@using System.Security.Cryptography.X509Certificates
@using System.Text.Json.Serialization
@inject HttpClient client

@if (categories != null && jpegImages != null)
{
    <div class="d-flex">
        <div class="w-25">
           @for (int i = 0; i < categories.Count; i++)
           {
               <div><img src="@jpegImages[i]"></div>
               <div class="pb-1">@categories[i].CategoryName</div>
           }
        </div>
        <div class="w-75"><_Products CategoryId="CategoryId"/></div>
    </div>
}

@code
{
    public int? CategoryId { get; set; } = null!;
    public List<Category>? categories { get; set; }
    public string[]? jpegImages { get; set; }
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        using var httpResponse = await client.GetAsync("/categories");

        if (!httpResponse.IsSuccessStatusCode)
        {
            errorMessage = httpResponse.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }

        categories = await httpResponse.Content.ReadFromJsonAsync<List<Category>>();

        await GetJpegImages();

    }

    private async Task GetJpegImages()
    {
        using var httpResponse = await client.GetAsync("/categories/GetJpegImages");

        if (!httpResponse.IsSuccessStatusCode)
        {
            errorMessage = httpResponse.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }

        jpegImages = await httpResponse.Content.ReadFromJsonAsync<string[]>();
    }
}



